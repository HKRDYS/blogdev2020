<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.demo.dao.ICommentMapper">
    <resultMap id="commentMap" type="comment">
        <id property="id" column="id"/>
        <result property="article.id" column="article_id"/>
        <result property="article.title" column="article_title"/>
        <result property="commentTime" column="comment_time"/>
        <result property="ip" column="ip"/>
        <result property="status" column="status"/>
        <result property="user.id" column="user_id"/>
        <result property="user.name" column="user_name"/>
    </resultMap>
<!--    根据博文id为条件进行查询-->
    <select id="findCommentByArticleId" resultMap="commentMap" parameterType="Integer">
        select
            c.id as id,
            c.article_id as article_id,
            a.title as article_title,
            c.content as content,
            c.comment_time as comment_time,
            c.ip as ip,
            c.status as status,
            c.person_id as user_id,
            u.name as user_name
        from t_comment c,t_article a,t_user u
        where c.article_id = a.id and c.person_id = u.id and c.status='1' and c.article_id=#{articleId}
    </select>
<!--    根据评论id为条件进行查询-->
    <select id="findCommentByCommentId" resultMap="commentMap" parameterType="Integer">
        select
            c.id as id,
            c.article_id as article_id,
            a.title as article_title,
            c.content as content,
            c.comment_time as comment_time,
            c.ip as ip,
            c.status as status,
            c.person_id as user_id,
            u.name as user_name
        from t_comment c,t_article a,t_user u
        where c.article_id = a.id and c.person_id = u.id and c.id = #{commentId}
    </select>
<!--    添加评论-->
    <insert id="addComment" parameterType="Comment">
        insert into t_comment(article_id,content,comment_time,status,person_id) values (#{article.id},#{content}
        ,#{commentTime},#{ip},#{status},#{user.id})
    </insert>
    <select id="findAllCommentByArticleId" resultMap="commentMap" parameterType="Integer">
        select
            c.id as id,
            c.article_id as article_id,
            a.title as article_title,
            c.content as content,
            c.comment_time as comment_time,
            c.ip as ip,
            c.status as status,
            c.person_id as user_id,
            u.name as user_name
        from t_comment c,t_article a,t_user u
        where c.article_id = a.id and c.person_id = u.id and
        c.article_id = #{arctileId}
    </select>
    <select id="findArticlePage" resultMap="commentMap">
        select
            c.id as id,
            c.article_id as article_id,
            a.title as article_title,
            c.content as content,
            c.comment_time as comment_time,
            c.ip as ip,
            c.status as status,
            c.person_id as user_id,
            u.name as user_name
        from t_comment c,t_article a,t_user u
        where c.article_id = a.id and c.person_id = u.id
        order by c.comment_time desc ,c.status limit #{begin},
        #{counts}
    </select>
</mapper>